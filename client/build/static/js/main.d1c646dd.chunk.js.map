{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/NavBar.js","components/TeeList.js","components/CreateForm.js","components/CreateTee.js","components/useFetch.js","components/UpdateTee.js","api.js","components/Details.js","components/Signup.js","components/Login.js","components/Profile.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_MESSAGE_SENDER_ID","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","NavBar","error","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","className","to","Link","onClick","Card","Body","Alert","variant","inline","type","placeholder","TeeList","tees","setTees","useParams","console","log","fetch","then","res","ok","json","data","catch","err","map","tee","style","width","Img","Image","src","image","Title","title","Text","description","_id","Button","CreateForm","setTitle","setDescription","artist","setArtist","setImage","history","useHistory","Container","fluid","Row","Col","Form","onSubmit","e","preventDefault","axios","post","push","Group","Label","Control","onChange","target","as","rows","CreateTee","useFetch","url","setData","setError","abortCont","AbortController","signal","Error","name","message","abort","UpdateTee","newTitle","setNewTitle","newDescription","setNewDescription","newArtist","setNewArtist","newImage","setNewImage","newTee","get","Details","setTee","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","a","current","minHeight","maxWidth","ref","required","disabled","Login","Profile","PrivateRoute","Component","component","rest","render","props","ForgotPassword","setMessage","UpdateProfile","promises","Promise","all","finally","defaultValue","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"mPAEMA,G,MAAMC,IAASC,cAAc,CAC/BC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,0jBAAYM,qCAC/BC,MAAOP,+CAEEQ,EAAOZ,EAAIY,O,OCRlBC,EAAcC,IAAMC,gBAEnB,SAASC,IACZ,OAAOC,qBAAWJ,GAGf,SAASK,EAAT,GAAmC,IAAZC,EAAW,EAAXA,SAAW,EAECC,qBAFD,mBAE9BC,EAF8B,KAEjBC,EAFiB,OAGPF,oBAAS,GAHF,mBAG9BG,EAH8B,KAGrBC,EAHqB,KA8BrCC,qBAAU,WAKN,OAJoBb,EAAKc,oBAAmB,SAAAC,GAC5CL,EAAeK,GACfH,GAAW,QAGZ,IAGH,IAAMI,EAAQ,CACVP,cACAQ,OAnCJ,SAAgBC,EAAOC,GACnB,OAAOnB,EAAKoB,+BAA+BF,EAAOC,IAmClDE,MAhCJ,SAAeH,EAAOC,GAClB,OAAOnB,EAAKsB,2BAA2BJ,EAAOC,IAgC9CI,OA7BJ,WACI,OAAOvB,EAAKwB,WA6BZC,cA1BJ,SAAuBP,GACnB,OAAOlB,EAAK0B,uBAAuBR,IA0BnCS,YAvBJ,SAAqBT,GACjB,OAAOlB,EAAKS,YAAYkB,YAAYT,IAuBpCU,eApBJ,SAAwBT,GACpB,OAAOnB,EAAKS,YAAYmB,eAAeT,KAsB3C,OACI,cAAClB,EAAY4B,SAAb,CAAsBb,MAAOA,EAA7B,UACML,GAAWJ,ICtDzB,IA6CeuB,EA7CA,WAAO,IAAD,EACStB,mBAAS,IADlB,mBACVuB,EADU,UAOjB,OACI,eAAC,IAAD,CAAuBC,GAAG,UAAUC,OAAO,KAA3C,UACN,cAAC,IAAsBC,MAAvB,CAA6BC,KAAK,QAAlC,0BACA,cAAC,IAAsBC,OAAvB,CAA8BC,gBAAc,qBAC5C,eAAC,IAAsBC,SAAvB,CAAgCC,GAAG,mBAAnC,UACE,eAAC,IAAD,CAAoBC,UAAU,UAA9B,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACA,cAAC,IAAmBC,KAApB,CAAyBP,KAAK,QAA9B,6BAEA,cAAC,IAAD,CAAMM,GAAG,UAAT,SACA,cAAC,IAAmBC,KAApB,CAAyBP,KAAK,UAA9B,0BAEA,cAAC,IAAD,CAAMM,GAAG,UAAT,SACA,cAAC,IAAmBC,KAApB,CAAyBP,KAAK,UAA9B,0BAEA,cAAC,IAAD,CAAMM,GAAG,UAAT,SACA,cAAC,IAAmBC,KAApB,CAAyBP,KAAK,UAA9B,sBAEA,cAAC,IAAD,CAAMM,GAAG,SAAT,SACA,cAAC,IAAmBC,KAApB,CAAyBP,KAAK,SAA9B,qBAEA,cAAC,IAAmBO,KAApB,CAAyBC,QAzB3B,aAyBE,oBACA,cAAC,IAAD,CAAMF,GAAG,WAAT,SACA,cAAC,IAAmBC,KAApB,CAAyBP,KAAK,WAA9B,uBAGA,cAACS,EAAA,EAAD,UAAM,cAACA,EAAA,EAAKC,KAAN,UAAYd,GAAS,cAACe,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBhB,WAGtD,eAAC,IAAD,CAAqBiB,QAAM,EAA3B,UACE,cAAC,IAAD,CAA4BC,KAAK,OAAOC,YAAY,SAASV,UAAU,YACvE,cAAC,IAAD,CAAuBO,QAAQ,gBAA/B,8BCKSI,G,MA5CK,WAAM,MAEE3C,mBAAS,IAFX,mBAEf4C,EAFe,KAETC,EAFS,KAGdd,EAAOe,cAAPf,GACRgB,QAAQC,IAAIjB,GAGZ1B,qBAAU,WACN4C,MAAM,eACLC,MAAK,SAAAC,GACF,GAAGA,EAAIC,GAEH,OADAL,QAAQC,IAAI,eACLG,EAAIE,UAGlBH,MAAK,SAAAI,GAAI,OAAIT,EAAQS,MACrBC,OAAM,SAAAC,GAAG,OAAIT,QAAQC,IAAIQ,QAC5B,CAACZ,IAoBH,OACI,qBAAKZ,UAAU,OAAf,SACKY,GAAQA,EAAKa,KAnBH,SAACC,GAChB,OACI,eAACtB,EAAA,EAAD,CAAMuB,MAAO,CAAEC,MAAO,SAAyB5B,UAAU,WAAzD,UACQ,cAACI,EAAA,EAAKyB,IAAN,CAAUC,OAAK,EAACvB,QAAQ,MAAMwB,IAAKL,EAAIM,QACvC,eAAC5B,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAK6B,MAAN,UAAaP,EAAIQ,QACjB,cAAC9B,EAAA,EAAK+B,KAAN,UACCT,EAAIU,cAEL,eAAC,IAAD,CAAMnC,GAAE,mBAAcyB,EAAIW,KAA1B,UACA,cAACC,EAAA,EAAD,CAAQ/B,QAAQ,UAAhB,qBAA4C,YARlBmB,EAAIW,Y,2CCiDvCE,EApEI,WAAO,IAAD,EACKvE,mBAAS,IADd,mBACdkE,EADc,KACPM,EADO,OAEiBxE,mBAAS,IAF1B,mBAEdoE,EAFc,KAEDK,EAFC,OAGOzE,mBAAS,IAHhB,mBAGd0E,EAHc,KAGNC,EAHM,OAIK3E,mBAAS,IAJd,mBAIdgE,EAJc,KAIPY,EAJO,KAMfC,EAAUC,cAehB,OACI,cAACC,EAAA,EAAD,CAAWC,MAAM,KAAKhD,UAAU,OAAhC,SACI,cAACiD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,SAjBD,SAACC,GAElBA,EAAEC,iBAEF,IAAM5B,EAAM,CAAEQ,QAAOE,cAAaM,SAAQV,SAC1CjB,QAAQC,IAAIU,GAGZ6B,IAAMC,KAAK,qBAAsB9B,GAGjCmB,EAAQY,KAAK,MAMD,UACI,eAACN,EAAA,EAAKO,MAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,QAAN,CACApF,MAAO0D,EAAOzB,KAAK,QAAQC,YAAY,QACvCmD,SAAU,SAACR,GAAD,OAAOb,EAASa,EAAES,OAAOtF,aAGvC,eAAC2E,EAAA,EAAKO,MAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,0BACA,cAACR,EAAA,EAAKS,QAAN,CACApF,MAAO4D,EAAa2B,GAAG,WAAWC,KAAM,EAAGtD,YAAY,2BACvDmD,SAAU,SAACR,GAAD,OAAOZ,EAAeY,EAAES,OAAOtF,aAG7C,eAAC2E,EAAA,EAAKO,MAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,qBACA,cAACR,EAAA,EAAKS,QAAN,CACApF,MAAOkE,EAAQjC,KAAK,SAASC,YAAY,cACzCmD,SAAU,SAACR,GAAD,OAAOV,EAAUU,EAAES,OAAOtF,aAGxC,eAAC2E,EAAA,EAAKO,MAAN,WACA,cAACP,EAAA,EAAKQ,MAAN,oBACI,cAACR,EAAA,EAAKS,QAAN,CACApF,MAAOwD,EAAOtB,YAAY,YAC1BmD,SAAU,SAACR,GAAD,OAAOT,EAASS,EAAES,OAAOtF,aAGvC,cAAC2E,EAAA,EAAKO,MAAN,UACA,wBAAQjD,KAAK,SAAb,gCCtDTwD,EANG,WACd,OACI,qBAAKjE,UAAU,YAAf,SAA2B,cAAC,EAAD,OCqCpBkE,EAxCE,SAACC,GACdpD,QAAQC,IAAI,+BAAgCmD,GADtB,MAGEnG,mBAAS,MAHX,mBAGfsD,EAHe,KAGT8C,EAHS,OAKIpG,mBAAS,MALb,mBAKfuB,EALe,KAKR8E,EALQ,KAqCtB,OA7BAhG,qBAAU,WAEN,IAAMiG,EAAY,IAAIC,gBAwBtB,OAtBAtD,MAAMkD,EAAK,CAAEK,OAAQF,EAAUE,SAC9BtD,MAAK,SAAAC,GAEF,GADAJ,QAAQC,IAAI,0BAA2BG,IACnCA,EAAIC,GACJ,MAAMqD,MAAM,8CAEhB,OAAOtD,EAAIE,UAEdH,MAAK,SAACI,GAEH8C,EAAQ9C,GAER+C,EAAS,SAEZ9C,OAAM,SAAAC,GACa,eAAbA,EAAIkD,MACH3D,QAAQC,IAAI,iBAGhBqD,EAAS7C,EAAImD,YAGV,kBAAML,EAAUM,WACxB,IAEI,CAAEtD,OAAM/B,UC0CJsF,EAzEG,WAAO,IAAD,EACY7G,mBAAS,IADrB,mBACb8G,EADa,KACHC,EADG,OAEwB/G,mBAAS,IAFjC,mBAEbgH,EAFa,KAEGC,EAFH,OAGcjH,mBAAS,IAHvB,mBAGbkH,EAHa,KAGFC,EAHE,OAIYnH,mBAAS,IAJrB,mBAIboH,EAJa,KAIHC,EAJG,KAKdxC,EAAUC,cAER/C,EAAOe,cAAPf,GACRgB,QAAQC,IAAIjB,GARQ,MASSmE,EAAS,sBAAD,OAAuBnE,IAA9C2B,EATM,EASZJ,KATY,EASD/B,MAenB,OACI,qBAAKS,UAAU,YAAf,SACM0B,GACE,8BACA,cAACqB,EAAA,EAAD,CAAWC,MAAM,KAAKhD,UAAU,OAAhC,SACA,cAACiD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,SApBL,SAACC,GAElBA,EAAEC,iBAEF,IAAMgC,EAAS,CAAER,WAAUE,iBAAgBE,YAAWE,YACtDrE,QAAQC,IAAIsE,GAEZ/B,IAAMC,KAAN,6BAAiCzD,GAAMuF,GCvBlB/B,IAAMgC,IAAI,eAAerE,MAAK,SAAAC,GAAG,OAAIA,EAAIE,QD0B9DwB,EAAQY,KAAK,MAUG,UACA,eAACN,EAAA,EAAKO,MAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,UAAY,6BAAMjC,EAAIQ,UACtB,cAACiB,EAAA,EAAKS,QAAN,CACAnD,KAAK,QAAQC,YAAW,UAAKgB,EAAIQ,OACjC2B,SAAU,SAACR,GAAD,OAAO0B,EAAY1B,EAAES,OAAOtF,aAG1C,eAAC2E,EAAA,EAAKO,MAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,0BACA,cAACR,EAAA,EAAKS,QAAN,CACAG,GAAG,WAAWC,KAAM,EAAGtD,YAAW,UAAKgB,EAAIU,aAC3CyB,SAAU,SAACR,GAAD,OAAO4B,EAAkB5B,EAAES,OAAOtF,aAGhD,eAAC2E,EAAA,EAAKO,MAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,qBACA,cAACR,EAAA,EAAKS,QAAN,CACAnD,KAAK,SAASC,YAAW,UAAKgB,EAAIgB,QAClCmB,SAAU,SAACR,GAAD,OAAO8B,EAAa9B,EAAES,OAAOtF,aAG3C,eAAC2E,EAAA,EAAKO,MAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,QAAN,CACAnD,KAAK,QAAQC,YAAW,UAAKgB,EAAIM,OACjC6B,SAAU,SAACR,GAAD,OAAOgC,EAAYhC,EAAES,OAAOtF,aAG1C,cAAC2E,EAAA,EAAKO,MAAN,UACA,wBAAQjD,KAAK,SAAb,oCEZT+E,EAlDC,WAAO,IACXzF,EAAOe,cAAPf,GACRgB,QAAQC,IAAIjB,GACZ,IAAM8C,EAAUC,cAHE,EAMI9E,mBAAS,IANb,mBAMX0D,EANW,KAMN+D,EANM,KAQlBpH,qBAAU,WACN4C,MAAM,uBAAD,OAAwBlB,IAC5BmB,MAAK,SAAAC,GACF,GAAGA,EAAIC,GAEH,OADAL,QAAQC,IAAI,eACLG,EAAIE,UAGlBH,MAAK,SAAAI,GAAI,OAAImE,EAAOnE,MACpBC,OAAM,SAAAC,GAAG,OAAIT,QAAQC,IAAIQ,QAC5B,IASF,OACI,qBAAKxB,UAAU,YAAf,SACE0B,GACE,eAACtB,EAAA,EAAD,CAAMuB,MAAO,CAAEC,MAAO,SAAyB5B,UAAU,WAAzD,UACA,cAACI,EAAA,EAAKyB,IAAN,CAAUC,OAAK,EAACvB,QAAQ,MAAMwB,IAAKL,EAAIM,QACvC,eAAC5B,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAK6B,MAAN,UAAaP,EAAIQ,QACjB,cAAC9B,EAAA,EAAK+B,KAAN,UACCT,EAAIU,cAEL,eAAC,IAAD,CAAMnC,GAAE,kBAAayB,EAAIW,KAAzB,UACA,cAACC,EAAA,EAAD,CAAQ/B,QAAQ,UAAhB,wBAA+C,OAE/C,cAAC,IAAD,CAAMN,GAAE,kBAAayB,EAAIW,KAAzB,SACA,cAACC,EAAA,EAAD,CAAQ/B,QAAQ,UAAUJ,QArBjB,SAACkD,GAElBA,EAAEC,iBACFC,IAAMgC,IAAN,6BAAgCxF,IAChC8C,EAAQY,KAAK,MAiBL,+BAXkC/B,EAAIW,Q,yBCkCvCqD,EAjEA,WAGX,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBALV,EAOehI,IAAxBa,EAPS,EAOTA,OAPS,KAODR,YACYD,mBAAS,KARpB,mBAQTuB,EARS,KAQF8E,EARE,OASerG,oBAAS,GATxB,mBASTG,EATS,KASAC,EATA,KAUXyE,EAAUC,cAVC,4CAYjB,WAA4BO,GAA5B,SAAA0C,EAAA,yDACI1C,EAAEC,iBAECuC,EAAYG,QAAQxH,QAAUsH,EAAmBE,QAAQxH,MAHhE,yCAIe6F,EAAS,4BAJxB,uBAOQA,EAAS,IACTjG,GAAW,GARnB,SAScK,EAAOkH,EAASK,QAAQxH,MAAOqH,EAAYG,QAAQxH,OATjE,OAUQqE,EAAQY,KAAK,KAVrB,kDAYQY,EAAS,8BAAD,MAZhB,QAcIjG,GAAW,GAdf,2DAZiB,sBA4BjB,OACI,mCACA,cAAC2E,EAAA,EAAD,CAAW/C,UAAU,mDACrB2B,MAAO,CAAEsE,UAAW,SADpB,SAGI,sBAAKjG,UAAU,QAAQ2B,MAAO,CAAEuE,SAAU,SAA1C,UACJ,cAAC9F,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIL,UAAU,mBAAd,qBAECT,GAAS,cAACe,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBhB,IACnC,eAAC4D,EAAA,EAAD,CAAMC,SAvCD,4CAuCL,UACI,eAACD,EAAA,EAAKO,MAAN,CAAY3D,GAAG,QAAf,UACI,cAACoD,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,QAAQ0F,IAAKR,EAAUS,UAAQ,OAElD,eAACjD,EAAA,EAAKO,MAAN,CAAY3D,GAAG,QAAf,UACA,cAACoD,EAAA,EAAKQ,MAAN,uBACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,WAAW0F,IAAKN,EAAaO,UAAQ,OAExD,eAACjD,EAAA,EAAKO,MAAN,CAAY3D,GAAG,mBAAf,UACA,cAACoD,EAAA,EAAKQ,MAAN,oCACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,WAAW0F,IAAKL,EAAoBM,UAAQ,OAE/D,cAAC9D,EAAA,EAAD,CAAQ+D,SAAUlI,EAAS6B,UAAU,QAAQS,KAAK,SAAlD,6BAIhB,sBAAKT,UAAU,yBAAf,sCAC6B,cAAC,IAAD,CAAMC,GAAG,SAAT,8BCWtBqG,EAnED,WAEV,IAAMX,EAAWC,mBACXC,EAAcD,mBAHJ,EAMehI,IAAvBiB,EANQ,EAMRA,MANQ,KAMDZ,YACaD,mBAAS,KAPrB,mBAORuB,EAPQ,KAOD8E,EAPC,OAQgBrG,oBAAS,GARzB,mBAQRG,EARQ,KAQCC,EARD,KASVyE,EAAUC,cATA,4CAWhB,WAA4BO,GAA5B,SAAA0C,EAAA,6DACI1C,EAAEC,iBADN,SAOQe,EAAS,IACTjG,GAAW,GARnB,SAScS,EAAM8G,EAASK,QAAQxH,MAAOqH,EAAYG,QAAQxH,OAThE,OAUQqE,EAAQY,KAAK,KAVrB,gDAYQY,EAAS,oBAAD,MAZhB,QAcIjG,GAAW,GAdf,0DAXgB,sBA2BhB,OACI,mCACA,cAAC2E,EAAA,EAAD,CAAW/C,UAAU,mDACrB2B,MAAO,CAAEsE,UAAW,SADpB,SAGI,sBAAKjG,UAAU,QAAQ2B,MAAO,CAAEuE,SAAU,SAA1C,UACJ,cAAC9F,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIL,UAAU,mBAAd,mBAECT,GAAS,cAACe,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBhB,IACnC,eAAC4D,EAAA,EAAD,CAAMC,SAtCF,4CAsCJ,UACI,eAACD,EAAA,EAAKO,MAAN,CAAY3D,GAAG,QAAf,UACI,cAACoD,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,QAAQ0F,IAAKR,EAAUS,UAAQ,OAElD,eAACjD,EAAA,EAAKO,MAAN,CAAY3D,GAAG,WAAf,UACA,cAACoD,EAAA,EAAKQ,MAAN,uBACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,WAAW0F,IAAKN,EAAaO,UAAQ,OAMxD,cAAC9D,EAAA,EAAD,CAAQ+D,SAAUlI,EAAS6B,UAAU,QAAQS,KAAK,SAAlD,uBAER,qBAAKT,UAAU,yBAAf,SACA,cAAC,IAAD,CAAMC,GAAG,mBAAT,qCAIR,sBAAKD,UAAU,yBAAf,8BACqB,cAAC,IAAD,CAAMC,GAAG,UAAT,gCC7Dd,SAASsG,IAAW,IAAD,EACNvI,mBAAS,IADH,mBACzBuB,EADyB,KAClB8E,EADkB,OAEAzG,IAAxBK,EAFwB,EAExBA,YAAac,EAFW,EAEXA,OACf8D,EAAUC,cAHgB,4CAKhC,sBAAAiD,EAAA,6DACE1B,EAAS,IADX,kBAGUtF,IAHV,OAII8D,EAAQY,KAAK,UAJjB,gDAOIY,EAAS,oBAAD,MAPZ,0DALgC,sBAehC,OACE,qCACE,cAACjE,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIL,UAAU,mBAAd,qBACCT,GAAS,cAACe,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBhB,IACnC,4CAHF,IAG2BtB,EAAYS,MACrC,cAAC,IAAD,CAAMuB,GAAG,kBAAkBD,UAAU,6BAArC,iCAKJ,qBAAKA,UAAU,yBAAf,SACE,cAACsC,EAAA,EAAD,CAAQ/B,QAAQ,OAAOJ,QA5BG,2CA4B1B,0B,oBC7BO,SAASqG,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAE5D1I,EAAgBL,IAAhBK,YACR,OACI,cAAC,IAAD,2BACI0I,GADJ,IAEAC,OAAQ,SAAAC,GACJ,OAAO5I,EAAc,cAACwI,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAU5G,GAAG,cCLzE,IAkEe6G,EAlEQ,WAEnB,IAAMnB,EAAWC,mBAIT3G,EAAkBrB,IAAlBqB,cANiB,EAOGjB,mBAAS,IAPZ,mBAOjBuB,EAPiB,KAOV8E,EAPU,OAQOrG,oBAAS,GARhB,mBAQjBG,EARiB,KAQRC,EARQ,OASOJ,qBATP,mBASjB2G,EATiB,KASRoC,EATQ,iDAWzB,WAA4B1D,GAA5B,SAAA0C,EAAA,6DAEI1C,EAAEC,iBAFN,SAKQyD,EAAW,IACX1C,EAAS,IACTjG,GAAW,GAPnB,SAQca,EAAc0G,EAASK,QAAQxH,OAR7C,OASQuI,EAAW,6CATnB,kDAWQ1C,EAAS,2BAAD,MAXhB,QAaIjG,GAAW,GAbf,2DAXyB,sBA0BzB,OACI,mCACA,cAAC2E,EAAA,EAAD,CAAW/C,UAAU,mDACrB2B,MAAO,CAAEsE,UAAW,SADpB,SAGI,sBAAKjG,UAAU,QAAQ2B,MAAO,CAAEuE,SAAU,SAA1C,UACJ,cAAC9F,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIL,UAAU,mBAAd,4BACCT,GAAS,cAACe,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBhB,IAClCoF,GAAW,cAACrE,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0BoE,IACtC,eAACxB,EAAA,EAAD,CAAMC,SArCO,4CAqCb,UACI,eAACD,EAAA,EAAKO,MAAN,CAAY3D,GAAG,QAAf,UACI,cAACoD,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,QAAQ0F,IAAKR,EAAUS,UAAQ,OAUlD,cAAC9D,EAAA,EAAD,CAAQ+D,SAAUlI,EAAS6B,UAAU,QAAQS,KAAK,SAAlD,+BAER,qBAAKT,UAAU,yBAAf,SACA,cAAC,IAAD,CAAMC,GAAG,SAAT,0BAIR,sBAAKD,UAAU,yBAAf,8BACqB,cAAC,IAAD,CAAMC,GAAG,UAAT,gCCqBd+G,EA/EO,WAGlB,IAAMrB,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBALH,EAO6BhI,IAA7CK,EAPgB,EAOhBA,YAAamB,EAPG,EAOHA,eAAgBD,EAPb,EAOaA,YAPb,EAQInB,mBAAS,IARb,mBAQhBuB,EARgB,KAQT8E,EARS,OASQrG,oBAAS,GATjB,mBAShBG,EATgB,KASPC,EATO,KAUlByE,EAAUC,cA6BhB,OACI,mCACA,cAACC,EAAA,EAAD,CAAW/C,UAAU,mDACrB2B,MAAO,CAAEsE,UAAW,SADpB,SAGI,sBAAKjG,UAAU,QAAQ2B,MAAO,CAAEuE,SAAU,SAA1C,UACJ,cAAC9F,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIL,UAAU,mBAAd,4BAECT,GAAS,cAACe,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBhB,IACnC,eAAC4D,EAAA,EAAD,CAAMC,SAtClB,SAAsBC,GAGlB,GAFAA,EAAEC,iBAECuC,EAAYG,QAAQxH,QAAUsH,EAAmBE,QAAQxH,MACxD,OAAO6F,EAAS,2BAGpB,IAAM4C,EAAW,GACjB7I,GAAW,GACXiG,EAAS,IACNsB,EAASK,QAAQxH,QAAUP,EAAYS,OACtCuI,EAASxD,KAAKtE,EAAYwG,EAASK,QAAQxH,QAE5CqH,EAAYG,QAAQxH,OACXyI,EAASxD,KAAKrE,EAAeyG,EAAYG,QAAQxH,QAG7D0I,QAAQC,IAAIF,GAAU/F,MAAK,WACvB2B,EAAQY,KAAK,QACdlC,OAAM,WACL8C,EAAS,+BACV+C,SAAQ,WACPhJ,GAAW,OAgBP,UACI,eAAC+E,EAAA,EAAKO,MAAN,CAAY3D,GAAG,QAAf,UACI,cAACoD,EAAA,EAAKQ,MAAN,oBACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,QAAQ0F,IAAKR,EAAUS,UAAQ,EAClDiB,aAAcpJ,EAAYS,WAE1B,eAACyE,EAAA,EAAKO,MAAN,CAAY3D,GAAG,WAAf,UACA,cAACoD,EAAA,EAAKQ,MAAN,uBACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,WAAW0F,IAAKN,EACnCnF,YAAY,6CAEZ,eAACyC,EAAA,EAAKO,MAAN,CAAY3D,GAAG,mBAAf,UACA,cAACoD,EAAA,EAAKQ,MAAN,oCACA,cAACR,EAAA,EAAKS,QAAN,CAAcnD,KAAK,WAAW0F,IAAKL,EACnCpF,YAAY,6CAEZ,cAAC4B,EAAA,EAAD,CAAQ+D,SAAUlI,EAAS6B,UAAU,QAAQS,KAAK,SAAlD,4BAIhB,qBAAKT,UAAU,yBAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,8BCxCGqH,MAtBf,WAEE,OACE,gCACE,cAAC,EAAD,IACF,cAAC,IAAD,UACE,eAACxJ,EAAD,WACA,cAAC,IAAD,CAAOyJ,OAAK,EAACC,KAAK,IAAId,UAAW/F,IACjC,cAAC6F,EAAD,CAAcgB,KAAK,UAAUd,UAAWzC,IACxC,cAACuC,EAAD,CAAcgB,KAAK,cAAcd,UAAW7B,IAC5C,cAAC2B,EAAD,CAAcgB,KAAK,eAAed,UAAWlB,IAC7C,cAAC,IAAD,CAAOgC,KAAK,UAAUd,UAAWhB,IACjC,cAAC,IAAD,CAAO8B,KAAK,SAASd,UAAWJ,IAChC,cAAC,IAAD,CAAOkB,KAAK,mBAAmBd,UAAWI,IAC1C,cAACN,EAAD,CAAcgB,KAAK,WAAWd,UAAWH,IACzC,cAACC,EAAD,CAAcgB,KAAK,kBAAkBd,UAAWM,aCvBtDS,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,U","file":"static/js/main.d1c646dd.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/auth';\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\nexport const auth = app.auth();\r\nexport default app;","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //if you wanted to sign in with another database than firebase, just change the return credentials\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n    //if you wanted to sign in with another database than firebase, just change the return credentials\r\n    function login(email, password){\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return auth.currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return auth.currentUser.updatePassword(password);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n        setCurrentUser(user);    \r\n        setLoading(false);\r\n        });\r\n        return unsubscribe;\r\n    }, []);\r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ReactBootstrap from 'react-bootstrap';\r\nimport { Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst NavBar = () => {\r\n    const [error, setError] = useState(\"\");\r\n    \r\n    function handleLogout(){\r\n      //\r\n    }\r\n\r\n    return ( \r\n        <ReactBootstrap.Navbar bg=\"primary\" expand=\"sm\">\r\n  <ReactBootstrap.Navbar.Brand href=\"#home\">Rescued Tees</ReactBootstrap.Navbar.Brand>\r\n  <ReactBootstrap.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <ReactBootstrap.Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <ReactBootstrap.Nav className=\"mr-auto\">\r\n      <Link to=\"/\">\r\n      <ReactBootstrap.Nav.Link href=\"#home\">View All Tees</ReactBootstrap.Nav.Link>\r\n      </Link>\r\n      <Link to=\"/create\">\r\n      <ReactBootstrap.Nav.Link href=\"#create\">Create Tee</ReactBootstrap.Nav.Link>\r\n      </Link>\r\n      <Link to=\"/update\">\r\n      <ReactBootstrap.Nav.Link href=\"#update\">Update Tee</ReactBootstrap.Nav.Link>\r\n      </Link>\r\n      <Link to=\"/signup\">\r\n      <ReactBootstrap.Nav.Link href=\"#signup\">Signup</ReactBootstrap.Nav.Link>\r\n      </Link>\r\n      <Link to=\"/login\">\r\n      <ReactBootstrap.Nav.Link href=\"#login\">Login</ReactBootstrap.Nav.Link>\r\n      </Link>\r\n      <ReactBootstrap.Nav.Link onClick={handleLogout}>Logout</ReactBootstrap.Nav.Link>\r\n      <Link to=\"/profile\">\r\n      <ReactBootstrap.Nav.Link href=\"#profile\">Profile</ReactBootstrap.Nav.Link>\r\n      </Link>\r\n      \r\n      <Card><Card.Body>{error && <Alert variant=\"danger\">{error}</Alert>}</Card.Body></Card>\r\n\r\n    </ReactBootstrap.Nav>\r\n    <ReactBootstrap.Form inline>\r\n      <ReactBootstrap.FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <ReactBootstrap.Button variant=\"outline-light\">Search</ReactBootstrap.Button>\r\n    </ReactBootstrap.Form>\r\n  </ReactBootstrap.Navbar.Collapse>\r\n</ReactBootstrap.Navbar>\r\n);\r\n}\r\n \r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport './Box.css';\r\n\r\n    const TeeList = () => {\r\n    //set the variable tees and watch it for updates\r\n    const [tees, setTees] = useState([]);\r\n    const { id } = useParams();\r\n    console.log(id);\r\n    \r\n    //useEffect fires a fetch/get all request on first page load\r\n    useEffect(() => {\r\n        fetch('/api/routes')\r\n        .then(res => {\r\n            if(res.ok) {\r\n                console.log(\"response ok\");\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(data => setTees(data))\r\n        .catch(err => console.log(err));\r\n    },[tees]);\r\n\r\n    //this populates the single bootstrap card template, styled with Box.css/box-home, renders all data (tiled cards)\r\n    const renderCard = (tee) => {\r\n        return(\r\n            <Card style={{ width: '18rem' }} key={tee._id} className=\"box-home\">\r\n                    <Card.Img Image variant=\"top\" src={tee.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{tee.title}</Card.Title>\r\n                        <Card.Text>\r\n                        {tee.description}\r\n                        </Card.Text>\r\n                        <Link to={`/details/${tee._id}`}>\r\n                        <Button variant=\"primary\" >Details</Button>{' '}\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n        )\r\n    }\r\n    //this maps over the returned data and inserts it into the card template\r\n    return (\r\n        <div className=\"grid\">\r\n            {tees && tees.map(renderCard)}\r\n        </div>\r\n     );\r\n};\r\n\r\nexport default TeeList;","import { useState } from 'react';\r\nimport { Form, Container, Row, Col } from 'react-bootstrap';\r\n// import { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { getTees } from '../api';\r\n\r\n\r\nconst CreateForm = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [artist, setArtist] = useState('');\r\n    const [image, setImage] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        //this prevents the page from default refreshing\r\n        e.preventDefault();\r\n        //this is grabbing the populated tee object from the form input\r\n        const tee = { title, description, artist, image };\r\n        console.log(tee);\r\n\r\n        //this is to your express server port NOT REACT server port\r\n        axios.post('/api/routes/create', tee);\r\n        //this fires the get all api so when index renders, the new post appears without hitting refresh\r\n        // getTees();\r\n        history.push('/');\r\n    };\r\n    return ( \r\n        <Container fluid=\"sm\" className=\"form\">\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit ={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control \r\n                            value={title} type=\"title\" placeholder=\"Title\"\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control \r\n                            value={description} as=\"textarea\" rows={5} placeholder=\"Type Your Description...\"\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Artist</Form.Label>\r\n                            <Form.Control \r\n                            value={artist} type=\"artist\" placeholder=\"Artist Name\"\r\n                            onChange={(e) => setArtist(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                            value={image} placeholder=\"Image Url\"\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <button type=\"submit\">Submit</button>\r\n                        {/* <p>{ title }</p>\r\n                        <p>{ description }</p>\r\n                        <p>{ artist }</p>\r\n                        <p>{ image }</p> */}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default CreateForm;","import React from 'react';\r\nimport CreateForm from './CreateForm';\r\n\r\nconst CreateTee = () => {\r\n    return ( \r\n        <div className=\"container\"><CreateForm /></div>\r\n     );\r\n};\r\n \r\nexport default CreateTee;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    console.log(\"this is the useFetch top #1 \", url)\r\n    //HOOKS useState\r\n    const [data, setData] = useState(null);\r\n    // const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    // console.log(\"this is the useFetch url 1 \", url);\r\n    //HOOK useEffect fires every time the page loads or something re-renders, passing an empty array makes it only fire when the page first loads. Adding a param(s) to the array makes the function only fire when that element(s) updates, called a dependency\r\n    useEffect(() => {\r\n        //abortController stops the fetch running if the page is unmounted by clicking away before fetch completes\r\n        const abortCont = new AbortController();\r\n        // console.log('useEffect url ', url);\r\n        fetch(url, { signal: abortCont.signal })\r\n        .then(res => {\r\n            console.log(\"this the useFetch res 2\", res);\r\n            if(!res.ok){\r\n                throw Error('Could not fetch the data for that resource');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then((data) => {\r\n            // console.log(data);\r\n            setData(data);\r\n            // setIsPending(false);\r\n            setError(null);\r\n        })\r\n        .catch(err => {\r\n            if(err.name === 'AbortError'){\r\n                console.log('fetch aborted');\r\n            }\r\n            // setIsPending(false);\r\n            setError(err.message);\r\n        });\r\n\r\n        return () => abortCont.abort();\r\n    }, []);//any variable in the [] means useEffect only fires when this variable is updated\r\n\r\n    return { data, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import React, { useState } from 'react';\r\nimport { Form, Container, Row, Col } from 'react-bootstrap';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport './Box.css';\r\nimport { getTees } from '../api';\r\nimport useFetch from './useFetch';\r\nimport axios from 'axios';\r\n\r\nconst UpdateTee = () => {\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [newArtist, setNewArtist] = useState('');\r\n    const [newImage, setNewImage] = useState('');\r\n    const history = useHistory();\r\n\r\n    const { id } = useParams();\r\n    console.log(id);\r\n    const { data: tee, error } = useFetch(`/api/routes/update/${id}`);\r\n\r\n    const handleSubmit = (e) => {\r\n        //this prevents the page from default refreshing\r\n        e.preventDefault();\r\n        //this is grabbing the populated tee object from the form input\r\n        const newTee = { newTitle, newDescription, newArtist, newImage };\r\n        console.log(newTee);\r\n        //this is to your express server port NOT REACT server port\r\n        axios.post(`/api/routes/update/${id}`, newTee);\r\n        //this fires the get all api so when index renders, the new post appears without hitting refresh\r\n        getTees();\r\n        history.push('/');\r\n    };\r\n        \r\n    return (\r\n        <div className=\"container\">\r\n            { tee && (\r\n                <div>                     \r\n                <Container fluid=\"sm\" className=\"form\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit ={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label><h2>{ tee.title }</h2></Form.Label>\r\n                            <Form.Control \r\n                            type=\"title\" placeholder={`${tee.title}`}\r\n                            onChange={(e) => setNewTitle(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control \r\n                            as=\"textarea\" rows={5} placeholder={`${tee.description}`}\r\n                            onChange={(e) => setNewDescription(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Artist</Form.Label>\r\n                            <Form.Control \r\n                            type=\"artist\" placeholder={`${tee.artist}`}\r\n                            onChange={(e) => setNewArtist(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control \r\n                            type=\"title\" placeholder={`${tee.image}`}\r\n                            onChange={(e) => setNewImage(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <button type=\"submit\">Submit</button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UpdateTee;","import axios from 'axios';\r\n\r\n//this does a get all tees fetch from mongodb\r\nexport const getTees = () => axios.get(\"/api/routes\").then(res => res.json);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { getTees } from '../api';\r\n\r\nconst Details = () => {\r\n    const { id } = useParams();\r\n    console.log(id);\r\n    const history = useHistory();\r\n\r\n    //set the variable tees and watch it for updates\r\n    const [tee, setTee] = useState([]);\r\n    //useEffect fires a fetch/getall request on first page load\r\n    useEffect(() => {\r\n        fetch(`/api/routes/details/${id}`)\r\n        .then(res => {\r\n            if(res.ok) {\r\n                console.log(\"response ok\");\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(data => setTee(data))\r\n        .catch(err => console.log(err));\r\n    },[]);\r\n\r\n    const handleDelete = (e) => {\r\n        //this prevents the page from default refreshing\r\n        e.preventDefault();\r\n        axios.get(`/api/routes/delete/${id}`);\r\n        history.push('/');\r\n    };\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n        { tee && (\r\n            <Card style={{ width: '18rem' }} key={tee._id} className=\"box-home\">\r\n            <Card.Img Image variant=\"top\" src={tee.image} />\r\n            <Card.Body>\r\n                <Card.Title>{tee.title}</Card.Title>\r\n                <Card.Text>\r\n                {tee.description}\r\n                </Card.Text>\r\n                <Link to={`/update/${tee._id}`}>\r\n                <Button variant=\"primary\" >Update Tee</Button>{' '}\r\n                </Link>\r\n                <Link to={`/delete/${tee._id}`}>\r\n                <Button variant=\"primary\" onClick={handleDelete}>Delete Tee</Button>\r\n                </Link>\r\n            </Card.Body>\r\n            </Card>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Details;","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Container, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import { AuthProvider } from '../contexts/AuthContext';\r\n\r\nconst Signup = () => {\r\n\r\n    //this is like useState\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    //currentUser is to test if user is logged in (look in form above error - uncomment currentUser.email\r\n    const { signup, currentUser } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n            return setError(\"Passwords do not match!\");\r\n        }\r\n        try{\r\n            setError('');\r\n            setLoading(true);\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            history.push('/');\r\n        } catch(error) {\r\n            setError('Failed to create an account', error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    return(\r\n        <>\r\n        <Container className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\"}}\r\n        >\r\n            <div className=\"w-100\" style={{ maxWidth: \"400px\"}}>\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                {/* {currentUser.email} <--use this to test if user logged in state is set */}\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"email\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            Already have an account? <Link to=\"/login\">Login</Link>\r\n        </div>\r\n        </div>\r\n        </Container>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Signup;","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Container, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import { AuthProvider } from '../contexts/AuthContext';\r\n\r\n//same as signup page, just take out password confirmation stuff\r\nconst Login = () => {\r\n    //this is like useState\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    // const passwordConfirmRef = useRef();\r\n    //currentUser is to test if user is logged in (look in form above error - uncomment currentUser.email\r\n    const { login, currentUser } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        // if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n        //     return setError(\"Passwords do not match!\");\r\n        // }\r\n        try{\r\n            setError('');\r\n            setLoading(true);\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            history.push('/');\r\n        } catch(error) {\r\n            setError('Failed to sign in', error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    return(\r\n        <>\r\n        <Container className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\"}}\r\n        >\r\n            <div className=\"w-100\" style={{ maxWidth: \"400px\"}}>\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Login</h2>\r\n                {/* {currentUser.email} <--use this to test if user logged in state is set */}\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        {/* <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group> */}\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n                </Form>\r\n                <div className=\"w-100 text-center mt-3\">\r\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            Need An Account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n        </div>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Card, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  \r\n  async function handleLogout() {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n      history.push(\"/login\");\r\n\r\n    } catch(error) {\r\n      setError(\"Failed to log out\", error);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <strong>Email:</strong> {currentUser.email}\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n            Update Profile\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Button variant=\"link\" onClick={handleLogout}>\r\n          Log Out\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    const { currentUser } = useAuth();\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return currentUser ? <Component {...props} /> : <Redirect to=\"login\" />\r\n        }}\r\n        >\r\n            \r\n        </Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Container, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//same as signup page, just take out password confirmation stuff\r\nconst ForgotPassword = () => {\r\n    //this is like useState\r\n    const emailRef = useRef();\r\n    // const passwordRef = useRef();\r\n    // const passwordConfirmRef = useRef();\r\n    //currentUser is to test if user is logged in (look in form above error - uncomment currentUser.email\r\n    const { resetPassword } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ message, setMessage ] = useState();\r\n\r\n    async function handleSubmit(e){\r\n\r\n        e.preventDefault();\r\n\r\n        try{\r\n            setMessage('');\r\n            setError('');\r\n            setLoading(true);\r\n            await resetPassword(emailRef.current.value);\r\n            setMessage('Check your inbox for further instructions');\r\n        } catch(error) {\r\n            setError('Failed to reset password', error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    return(\r\n        <>\r\n        <Container className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\"}}\r\n        >\r\n            <div className=\"w-100\" style={{ maxWidth: \"400px\"}}>\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {message && <Alert variant=\"success\">{message}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        {/* <Form.Group id=\"email\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group> */}\r\n                        {/* <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group> */}\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n                </Form>\r\n                <div className=\"w-100 text-center mt-3\">\r\n                <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            Need An Account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n        </div>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default ForgotPassword;","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Container, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import { AuthProvider } from '../contexts/AuthContext';\r\n\r\nconst UpdateProfile = () => {\r\n\r\n    //this is like useState\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    //currentUser is to test if user is logged in (look in form above error - uncomment currentUser.email\r\n    const { currentUser, updatePassword, updateEmail } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n            return setError(\"Passwords do not match!\");\r\n        }\r\n        \r\n        const promises = [];\r\n        setLoading(true);\r\n        setError(\"\");\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value));\r\n        }\r\n        if(passwordRef.current.value){\r\n                    promises.push(updatePassword(passwordRef.current.value));\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/');\r\n        }).catch(() => {\r\n            setError('Failed to Update Account');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Container className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\"}}\r\n        >\r\n            <div className=\"w-100\" style={{ maxWidth: \"400px\"}}>\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                {/* {currentUser.email} <--use this to test if user logged in state is set */}\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required\r\n                        defaultValue={currentUser.email} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} \r\n                        placeholder=\"Leave Blank To Keep The Same Password\"/>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} \r\n                        placeholder=\"Leave Blank To Keep The Same Password\"/>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/\">Cancel</Link>\r\n        </div>\r\n        </div>\r\n        </Container>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UpdateProfile;","import { Route, Switch } from \"react-router-dom\";\r\n// import * as ReactBootstrap from 'react-bootstrap';\r\nimport NavBar from './components/NavBar';\r\nimport TeeList from './components/TeeList';\r\nimport CreateTee from './components/CreateTee';\r\nimport UpdateTee from './components/UpdateTee';\r\nimport Details from \"./components/Details\";\r\nimport Signup from './components/Signup';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport Login from './components/Login';\r\nimport Profile from './components/Profile';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport ForgotPassword from './components/ForgotPassword';\r\nimport UpdateProfile from \"./components/UpdateProfile\";\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div>\r\n      <NavBar />\r\n    <Switch>\r\n      <AuthProvider>\r\n      <Route exact path=\"/\" component={TeeList} />\r\n      <PrivateRoute path=\"/create\" component={CreateTee} />\r\n      <PrivateRoute path=\"/update/:id\" component={UpdateTee} />\r\n      <PrivateRoute path=\"/details/:id\" component={Details} />\r\n      <Route path=\"/signup\" component={Signup} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n      <PrivateRoute path=\"/profile\" component={Profile} />\r\n      <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n      </AuthProvider>\r\n    </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}